name: Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    env:
      SCHEMA_FILE: schema.graphql
      SCHEMA_ARTIFACT: schema
    outputs:
      schema: ${{ env.SCHEMA_FILE }}
      schema_artifact: ${{ env.SCHEMA_ARTIFACT }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
      - name: Set up Java 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2
      - name: Execute Gradle build
        run: ./gradlew clean build graphqlGenerateSDL
      - name: Upload schema artifact
        uses: actions/upload-artifact@v3
        with:
          path: build/${{ env.SCHEMA_FILE }}
          name: ${{ env.SCHEMA_ARTIFACT }}

  deploy:
    name: Deploy Application
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Deploy
        run: echo "::warning file=.github/workflows/deploy.yaml,line=43,endLine=44,title=No Deploy step defined::Define your custom workflow for deploying your subgraph here."

  publish_schema:
    name: Publish new schema to Apollo Studio
    needs: [ deploy ]
    env:
      APOLLO_VCS_COMMIT: ${{ github.event.pull_request.head.sha }}
      APOLLO_KEY: ${{ secrets.APOLLO_KEY }}
      APOLLO_GRAPH_REF: ${{ secrets.APOLLO_GRAPH_REF }}
      PRODUCTION_URL: ${{ secrets.PRODUCTION_URL }}
      # rename this to a valid subgraph name
      SUBGRAPH_NAME: foo-bar
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.prepare_schema.outputs.schema_artifact }}
      - name: Install Rover
        run: |
          curl -sSL https://rover.apollo.dev/nix/latest | sh
          echo "$HOME/.rover/bin" >> $GITHUB_PATH
      - name: Publish Schema
        if: env.APOLLO_KEY != '' &&  env.APOLLO_GRAPH_REF != '' && env.PRODUCTION_URL != ''
        run: rover subgraph publish ${{ secrets.APOLLO_GRAPH_REF }} --schema ${{ needs.prepare_schema.outputs.schema }} --name ${{ env.SUBGRAPH_NAME }} --routing-url ${{ secrets.PRODUCTION_URL }}
      - name: APOLLO_KEY is not set
        if: env.APOLLO_KEY == ''
        run: echo "::warning file=.github/workflows/deploy.yaml,line=65,col=1,endColumn=1::No Apollo Studio Api Key is set in repository. Set this in the repository secrets under APOLLO_KEY"
      - name: APOLLO_GRAPH_REF is not set
        if: env.APOLLO_GRAPH_REF == ''
        run: echo "::warning file=.github/workflows/deploy.yaml,line=65,col=1,endColumn=1::No Apollo Studio Graph Name is set in repository. Set this in the repository secrets under APOLLO_GRAPH_REF"
      - name: PRODUCTION_URL is not set
        if: env.PRODUCTION_URL == ''
        run: echo "::warning file=.github/workflows/deploy.yaml,line=65,col=1,endColumn=1::No Production URL is set in repository. Set this in the repository secrets under PRODUCTION_URL"
